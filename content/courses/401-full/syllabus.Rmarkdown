---
title: 'Syllabus'
linktitle: 'INFV 401'
toc: true
type: docs
date: "2019-07-29T00:00:00-07:00"
draft: false
weight: 30
menu:
  401-full:
    identifier: Syllabus
    name: Syllabus
    weight: 30
output:
  pdf_document:
    toc: false
    toc_depth: 2
    latex_engine: xelatex
---

# Course Info: INFV 401

## Fall 2019-20, full semester

_August 26, 2019 - December 18, 2019_

|              	|   	|                                                                                                        	|
|--------------	|---	|-------------------------------------------------------------------------------------------------------	|
| Meeting time	|   	| Mondays from 6-8:30pm (Arizona local time; [link in LMS](https://d2l.arizona.edu))      	|
| People      	|   	| Instructor: Dr. Ryan M. Straight                                                                	|
| Email        	|   	| ryanstraight&commat;email.arizona.edu                                                               	|
| Office Hours  |   	| Virtual open-door: https://arizona.zoom.us/my/ryanstraight                                        |
| Slack         |   	| &commat;ryanstraight                             	|
| Twitter     	|   	| &commat;ryanstraight                   	|
| PGP          	|   	| https://keybase.io/ryanstraight                                                                 	|

---

# Course Description

This course is a beginning level exploration of human-computer design, interaction and interfaces. The students will be introduced to the theory of human-computer interaction (HCI) as well as to the principles of effective visual design using user experiences.

# Course Overview

On completing this course, students will have participated in each step of the interaction design process.  They will be familiar with the vocabulary, tools, and methodologies of an interaction designer and know the role of each member of an interaction design team.  Students will understand how human-computer interaction fits in the larger topic of interaction design.

This course utilizes a variety of educational activities to deliver and assess understanding of the course content.  Students will work in collaborative groups to complete weekly questions from the reading assignments, participate in activities during the weekly course meetings, complete a series of five independent projects, and engage in other activities as assigned.

We will cover many topics in this class, we will find ourselves in many places and times, and we will be both historians and futurists. Any study of the intersection of technology and education requires a foray into myriad topics, including psychology, sociology, media studies, gender studies, geo-politics, security, futurism and more. Be prepared to become both consumers and creators. Bring your passion to this collaborative experience and we will all benefit greatly.

This course has been updated for inclusion in the Cyber Security program. With this inclusion, the notions of security/usability balance, appropriate timing of security considerations, and the place of security at various points in the design, development, and testing of user interfaces is addressed. Through this, students will understand user interface issues that will affect the implementation and perception of security mechanisms and the behavioral impacts of various security ‘policies.’

---

# Course Objectives

Based upon Association for Educational Communications and Technology's [AECT Standards for Professional Education Programs (2012 version)](http://aect.site-ym.com/resource/resmgr/AECT_Documents/AECT_Standards_adopted7_16_2.pdf):

This course is broken down into modules that last between 1 and 2 weeks.

---

## Module 1

1. Explain the difference between good and poor interaction design.
1. Explain what is good and bad about an interactive product in terms of the goals and core principles of interaction design.
1. Explain what is meant by problem space.
1. Describe what a conceptual model is and how to begin to formulate one.
1. Outline the core interaction types for informing the development of a conceptual model.
1. Explain what cognition is and why it is important for interaction design.
1. Explain what mental models are.
1. Practice generating and eliciting mental models from others.
1. Identify and explain implicit and explicit security policies in systems.
1. Analyze the role of social engineering and its continued use as a primary attack vector.
1. Discuss and describe the role of and best practices in authentication passwords.

---

## Module 2

1. Describe the social mechanisms that are used by people when communicating and collaborating.
1. Discuss how social media have changed the ways in which we keep in touch, make contact, and manage our social and work lives.
1. Describe some of the new forms of social behavior that have emerged as a result of using new social media and communication technologies.
1. Describe how emotions relate to the user experience
1. Identify examples of interfaces that are both pleasurable and usable.
1. Present well-known models and frameworks of emotion and pleasure.
1. Critique the persuasive impact of an online agent on customers.
1. Cite examples of different kinds of interfaces
1. Discuss the difference between graphical and natural user interfaces (GUIs vs NUIs).
1. Compare and select interfaces appropriate to given applications or activities.

---

## Module 3

1. Discuss how to plan and run a successful data gathering program.
1. List steps for planning and running a data gathering interview.
1. Cite important practices for questionnaire design
1. Describe frameworks for focusing an observation in the field
1. Discuss the difference between qualitative and quantitative data and analysis.
1. Analyze and report data gathered from a questionnaire.
1. Explain strategies for analyzing data from an interview or observation.
1. Evaluate and design authentication interfaces.

---

## Module 4

1. Explain the main principles of a user-centered approach to Interaction Design
1. Describe a simple lifecycle model of interaction design.
1. Perform each step of the interaction design lifecycle on a project with a given scope
1. Describe different kinds of requirements.
1. Identify different kinds of requirements from a simple description.
1. Match data gathering techniques to requirements gathering activities
1. Perform hierarchical task analysis on a simple description.
1. Describe prototyping and different types of prototyping activities.
1. Produce simple prototypes from the models developed during the requirements activity.
1. Create a conceptual model for a product and justify your choices.
1. Explain the use of scenarios and prototypes in design.
1. Analyze policies that users control and hidden policies controlled by a system.

---

## Module 5

1. Define key concepts and terms used in evaluation.
1. Describe a range of different types of evaluation methods.
1. Discuss some of the practical challenges that evaluators have to consider when doing evaluation.
1. Match different evaluation methods to their appropriate stages of the design process.
1. Define the components of the DECIDE framework described in the book.
1. Describe the components required to conduct a usability test and the kind of information that can be gathered
1. Conduct a simple usability test of an existing website or interactive product.
1. List and define the 10 heuristics identified by Nielsen, et al.
1. Conduct a heuristic evaluation of an existing website or interactive product.
1. Define and demonstrate how implementing security impacts the user experience.

---

## Bonus

In each module students may turn in an optional User Experience Analysis (UXA).

---

# Required Readings

Preece, J., Sharp, H., & Rogers, Y. (2015). *Interaction Design: Beyond Human-Computer Interaction*. 4th ed.  Chinchester, West Sussex, UK: Wiley. ISBN: 978-1119020752.[http://www.id-book.com](http://www.id-book.com). 

Browsing [the book’s website](http://www.id-book.com/) is highly encouraged.

Additional readings are also required and can be found in the LMS, including the OWASP Secure Coding and Testing guidelines: [https://www.owasp.org/](https://www.owasp.org/) 

---

# Assignments

## Point values

Following is a basic list of assignments and their point values. Note that this may change throughout the semester depending on class needs.

| Assignment                              	|   	| Point value             	|
|-----------------------------------------	|---	|-------------------------	|
| Weekly Assignments                      	|   	| 160 (total)             	|
| Weekly reading responses                	|   	| 90 (10pts x 9 chapters) 	|
| Weekly participation                    	|   	| 70 (10pts x 7 weeks)    	|
| Annotated Bibliography                  	|   	| 25                      	|
| Project 1: The Conceptual Model         	|   	| 30                      	|
| Project 2: Personas                     	|   	| 30                      	|
| Project 3: Lo-Fidelity Prototypes       	|   	| 36                      	|
| Project 4: Heuristic Evaluation         	|   	| 30                      	|
| Project 5: Usability & Security Testing 	|   	| 50                      	|
| ‘Connections’ Reflection Paper          	|   	| 15                      	|
| User Experience Analyses                	|   	| 25 (5pts x 5)           	|
| Final Reflection                        	|   	| 5                       	|
|                                         	|   	| Total: 376              	|

---

## Weekly Assignments

Given the nature of this field, weekly participation in class-based discussion is essential and required. Students will work collaboratively weekly on a set of questions and prompts provided by the instructor. Participation points double as attendance points. If you will miss the class meeting you must **a**) notify your instructor 24 hours in advance, **b**)  watch the recorded class meeting, and **c**) take and submit your notes for that class meeting to the dropbox.

* 160 points: 90 points spread out through 9 chapter response sets and 5 points per week for 14 weeks of in-class participation (varies from attendance and other requirements)

---

## Annotated Bibliography

Students will produce an annotated bibliography with an introduction, a conclusion, and in proper APA 6th edition style. See the LMS for many resources on both writing an annotated bibliography and correctly using 6th edition APA. The topic of the bibliography is chosen by the student, so long as it fits within the realm of HCI.

* 25 points, evaluation and point distribution in assignment rubric.

---

## Projects

Each module culminates in a project wherein students are provided with a real-world problem to solve. Projects are individual in nature but may require students to perform interview or testing simulations with third parties outside the class. Each project has an associated (entirely optional and bonus) User Experience Analysis that allows students to apply what they’ve accomplished in the project to a more personal, creative, familiar experience. 

### Project 1:  The Conceptual Model

This project is intended to allow you to demonstrate your understanding of the conceptual model, how it fits into the larger realm of interaction design, and to flex your creative muscles. There is no required format for how the material should be presented beyond using a table where specified. Students will also reflect on the importance of and need to include security considerations at the conceptual stage.

* 30 points, evaluation and point distribution in assignment rubric.
* _5 bonus points for optional UXA_


### Project 2: Personas

This project aims at introducing students to the concept of personas and their usefulness and place in the interaction design process. Personas should be in narrative form and should include a photo, name, and personal details that bring the persona to life. Each persona must include likes, dislikes, and goals for visiting the site and be referenced to the analytics data when possible. Students are also introduced to Creative Commons and public domain materials.

* 30 points, evaluation and point distribution in assignment rubric.
* _5 bonus points for optional UXA_


### Project 3: Lo-Fi Prototypes

Students are given a scenario in which they provide a low fidelity prototype to a client for testing. Students will provide an appropriate interface metaphor, interaction type, the paper prototype itself, a step-by-step documentation of the interactions within the prototype (as per the scenario), and a reflection of their process *and* the experience of having someone else ‘test’ the prototype. Students’ artistic skills are not evaluated. Inclusion a of standards-based authentication module is required.

* 36 points, evaluation and point distribution in assignment rubric.
* _5 bonus points for optional UXA_


### Project 4: The Heuristic Evaluation & Security Audit

Students will be introduced to methods for testing the usability of websites and perform tests on real-world interfaces and best-practices for site security as per OWASP. They will define different methods for heuristically evaluating a website and choose the appropriate test given example sites at different stages of development. Students will propose methods for resolving issues given a site with a predefined set of issues. Students will also provide a detailed evaluation and tear-down of site security and provide industry-standard suggestions for improvement.

* 30 points, evaluation and point distribution in assignment rubric.
* _5 bonus points for optional UXA_


### Project 5: User & Security Experience Testing

Given a specific scenario, students will develop a usability testing plan for a website that addresses a particular client request. Students’ testing plans will cover the scope, purpose, testing sessions, participant descriptions, scenarios, quantitative and qualitative metrics, the roles performed by those in the testing group, and an analysis of user experience regarding current security measures in place on that website. Tests performed by the student will ultimately comply with standards presented by Usability.gov and in part the OWASP Testing Guide.

* 50 points, evaluation and point distribution in assignment rubric.
* _5 bonus points for optional UXA_

---

## Reflections

### Connections: Single Point of Failure

Students will reflect on the strength as well as the fragility of large-scale systems based on human-computer interaction. Introduced to the concept of the ‘single point of failure,’ students will critically examine HCI from both technical and societal standpoints, as well as their own assumptions and preconceptions about that complex intersection.

* 15 points, evaluation and point distribution in assignment rubric.

### Final Reflection

Students will subjectively reflect on the class as a whole (both in content and delivery), addressing their expectations of the experience, what they perceived (specifically regarding the online environment), and what and how students felt were their biggest accomplishments and hurdles throughout the semester. This is not intended to be a replacement for TCEs.

* _5 bonus points_

---

# Assessment

## Grading Methodology

I believe teaching a class should be like good jazz: there’s a basic structure with which you start but you shouldn’t be afraid to try variations on a theme. That is to say, the assignments’ and projects’ dates, point values, or even whether they are required may change throughout the term, as may the specifics of the topics we cover. Please be aware that with the exception of *extremely* extraneous circumstances (death in the immediate family, hospitalization, etc.), **I ****_do not_**** give out Incomplete grades**. You should be keeping an eye on your grade throughout the semester and, if you have any questions, do not hesitate to contact me. [http://catalog.arizona.edu/policy/grades-and-grading-system](http://catalog.arizona.edu/policy/grades-and-grading-system) 

---

## Example Score Breakdown

I use a simple point scale calculated to a percentage automatically by our LMS. I *do not* round, so an effort to attain all points possible is highly encouraged. Below is an initial grading breakdown for this class. *Note: this may change as the semester moves along and point values shift or assignments are added or removed*. Point values labeled with *italics* are bonus and are not calculated into the final grade total.

| Grade 	| Percentage 	| Points: Low     	| High   	|
|-------	|------------	|------------------	|-------	|
| A     	| 90%        	| 338.4            	| 376   	|
| B     	| 80%        	| 300.8            	| 338.3 	|
| C     	| 70%        	| 263.2            	| 300.7 	|
| D     	| 60%        	| We need to talk. 	| Now.   	|

---

## Evaluation

You’ll notice this course does something a bit different with project grades: first, I expect everyone to aim for the highest level of achievement in a rubric; second, it is **your** responsibility to explain **how** you achieve that level of proficiency, not to simply state that you did. As such, you need to include in each submission a **Grading Declaration**. On the last page of every assignment (even if there is a Works Cited page, it should go at the very end), simply copy the different criteria (Task 1: Objects, Task 2: Attributes, etc) and state clearly, concisely, and specifically **how you addressed them in your project**. A couple examples from Project 1 could be (you should have a line for *each of the items in the rubric*, not just what I have here):

>**Task 2: Detail**: I created four conceptual model tables that are complete and each addresses one the four required sub-systems listed in the assignment document.
>
>**Mechanics**: Both I and a classmate proofread my submission, looking for grammatical and spelling errors. I also double-checked my citations with the Purdue Online Writing Lab (OWL) criteria for APA formatting.

Each project has a rubric like the one below included in the assignment. *Use it as your* **guide** *to create your Declaration*. See [this Google document](https://docs.google.com/document/d/1Uu7PWCWwSLsR_3q23I7xstV_OUgMAkdvVRZJ4nw61HM/edit?usp=sharing) as an example (requires UA login).

Please note: While the majority of projects use rubrics, there are a few projects that you will receive points for simply by completing them. If a project does not have a rubric, I will note that in the assessment section of each project. **You should still include a Grading Declaration that explains how you fulfilled the assignment requirements.**

Rubrics vary in form so I have provided an example of the rubric from the Conceptual Model project.


|                    	|   	| Beginning (1pt) 	|   	| Progressing (2pts) 	|   	| Accomplishing (3pts 	|
|--------------------	|---	|-----------------	|---	|--------------------	|---	|---------------------	|
| Mechanics          	|   	| More than three errors in spelling or grammar. Two or more citation errors.                	|   	| One or two errors in spelling or grammar. One citation error.                   	|   	| No errors in spelling or grammar. All properly formatted citations.                    	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Timeliness         	|   	|                  	|   	|                     	|   	| Submitted prior to due date.                    	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 1: Objects    	|   	| Objects given include more than three non-task related elements                	|   	| Objects include a mix of task-related and non-task-related objects                   	|   	| Objects are all task-related (nouns)                    	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 1: Attributes 	|   	| Attributes listed include more than three implementation-focused items                	|   	| Attributes listed include a mix of implementation-focused and task-focused attributes                     	|   	| Attributes listed are all task-focused         	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 1: Operations 	|   	| Operations listed include more than three implementation-focused items	|   	| Operations listed include a mix of implementation-focused and task-focused attributes	|   	| Operations listed are all task-focused (verbs)                    	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 2: Goals      	|   	|  Model accounts for two or fewer of the stated or student-generated goals for the system              	|   	| Model accounts for three of the stated or student-genertaed goals for the system                   	|   	| Model accounts for at least four goals from the list or student-generated goals                    	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 2: Detail     	|   	| Models are shallow, missing obvious objects, attributes, or operations for each system                 	|   	|  Models are fairly complete, accounting for the major objects and operations of each subsystem                  	|   	| Models are complete, accounting for major objects, attributes, and operations of each subsytem                    	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 2: Objects    	|   	| Objects given include more than three non-task related elements                	|   	| Objects include a mix of task-related and implementation-focused attributes                   	|   	| Objects are all task-related (nouns)                     	|
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 2: Attributes 	|   	| Attributes listed include more than three implementation-focused attributes                 	|   	|Attributes listed include a mix of implementation- and task-focused attributes                    	|   	| Attributes are all task-focused                    	| 
|                    	|   	|                 	|   	|                    	|   	|                     	|
| Task 2: Operations 	|   	| Operations listed include more th an three implementation-focused items                 	|   	| Operations listed are a mix of implementation- and task-focused                   	|   	| Operations listed are all task-focused (verbs)                    	|


This rubric has ten main criteria (left-hand column) and is split into two major sections. The first section, Mechanics and Timeliness, involve the logistics of the assignment. The second, the Content, contains the criteria for the actual tasks involved in the assignment.

There are three levels of performance for each criteria - Accomplishing, Progressing, and Beginning. My rubrics all follow the same basic structure even if the performance level labels vary.

Notice that the criteria *Timeliness* has no entry for the Progressing or Beginning levels as I expect the assignment to be submitted on time.

## Gateway Requirements

Also be aware that there are **gateway requirements** prior to reaching the assessment rubric. For example, if a project requires you to submit an 8-10 page paper and your submission is only 6 pages (ie, does not meet the gateway requirements) **I will simply not grade it**. These gateway requirements are made clear in each assignment document. 
---
```{r, child="_classpolicies.Rmd"}
```

_Syllabus dated *July 29, 2019*_.
